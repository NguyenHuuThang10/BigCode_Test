// Import module http c·ªßa Node.js ƒë·ªÉ t·∫°o server
import http from "http";
// Import h√†m ƒëi·ªÅu ph·ªëi request ƒë·∫øn ƒë√∫ng controller
import { handleRequest } from "./routes.js";
// Import h√†m k·∫øt n·ªëi c∆° s·ªü d·ªØ li·ªáu t·ª´ Sequelize
import { connectDB } from "./config/db/index.js";
// Import model Product ƒë·ªÉ ƒë·∫£m b·∫£o ƒë·ªìng b·ªô schema (c√≥ th·ªÉ sync b·∫£ng)
import { Product } from "./models/product.js";
// Khai b√°o c·ªïng m√† server s·∫Ω l·∫Øng nghe
const PORT = process.env.PORT;
/**
 * Quy tr√¨nh kh·ªüi ch·∫°y server:
 * 1. K·∫øt n·ªëi ƒë·∫øn c∆° s·ªü d·ªØ li·ªáu
 * 2. ƒê·ªìng b·ªô b·∫£ng `products` (t·∫°o b·∫£ng n·∫øu ch∆∞a c√≥)
 * 3. T·∫°o server HTTP
 * 4. L·∫Øng nghe v√† x·ª≠ l√Ω c√°c request th√¥ng qua handleRequest
 */
connectDB()
    .then(async () => {
    // ƒê·ªìng b·ªô b·∫£ng s·∫£n ph·∫©m, th√™m c·ªôt n·∫øu thi·∫øu (ch·ªâ n√™n d√πng khi dev)
    await Product.sync(); // üëâ c√≥ th·ªÉ thay b·∫±ng .sync({ alter: true }) n·∫øu c·∫ßn t·ª± ƒë·ªông c·∫≠p nh·∫≠t c·ªôt
    // T·∫°o server HTTP thu·∫ßn
    const server = http.createServer((req, res) => {
        handleRequest(req, res); // x·ª≠ l√Ω routing v√† controller logic
    });
    // Kh·ªüi ƒë·ªông server v√† log ra terminal
    server.listen(PORT, () => {
        console.log(`Server running at http://localhost:${PORT}`);
    });
})
    .catch((err) => {
    // N·∫øu k·∫øt n·ªëi DB th·∫•t b·∫°i, log l·ªói v√† d·ª´ng ch∆∞∆°ng tr√¨nh
    console.error("L·ªói k·∫øt n·ªëi DB, kh√¥ng kh·ªüi ch·∫°y server.", err);
    process.exit(1);
});
