import { Router } from 'express';
import { RegisterRoutes as RegisterAdminRoutes } from '../routes/routes';
import { RegisterRoutes as RegisterUserRoutes } from '../routes/user/routes';
import swaggerAdminDocument from '../routes/swagger.json';
import swaggerUserDocument from '../routes/user/swagger-user.json';
import swaggerUi from 'swagger-ui-express';
import { adminGuard, userGuard } from '../middlewares/auth.middlewares';

const router = Router();

// Swagger UIs
router.use('/admin/docs', swaggerUi.serveFiles(swaggerAdminDocument), swaggerUi.setup(swaggerAdminDocument));
router.use('/user/docs', swaggerUi.serveFiles(swaggerUserDocument), swaggerUi.setup(swaggerUserDocument));

// Admin routes (generated by TSOA) protected by ADMIN role
const adminRouter = Router();
adminRouter.use(adminGuard);
RegisterAdminRoutes(adminRouter);
router.use('/admin', adminRouter);

// User routes (generated by TSOA) protected by USER or ADMIN role
const userRouter = Router();
userRouter.use(userGuard);
RegisterUserRoutes(userRouter);
router.use('/user', userRouter);

export default router;
